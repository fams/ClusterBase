//
// Generated file, do not edit! Created by opp_msgc 4.2 from GameForm/GameFormPkt.msg.
//

#ifndef _GAMEFORMPKT_M_H_
#define _GAMEFORMPKT_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0402
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// cplusplus {{
#include "ClusterPkt_m.h"
// }}



/**
 * Enum generated from <tt>GameForm/GameFormPkt.msg</tt> by opp_msgc.
 * <pre>
 * enum ClusterGameFormMessageTypes 
 * { 
 *     	CLUSTER_INFO		= 15008;
 *     	CLUSTER_INIT 		= 15010;
 *     	CLUSTER_JOIN 		= 15020;
 *     	CLUSTER_ACCEPTED 	= 15030;
 *     	CLUSTER_NEIGH_INQ 	= 15040;
 *     	CLUSTER_NEIGH_RESP 	= 15050;
 *     	CLUSTER_REJOIN		= 15060;
 *     	CLUSTER_HELO	    = 15070;
 *     	CLUSTER_ELECTION	= 15080;
 * };
 * </pre>
 */
enum ClusterGameFormMessageTypes {
    CLUSTER_INFO = 15008,
    CLUSTER_INIT = 15010,
    CLUSTER_JOIN = 15020,
    CLUSTER_ACCEPTED = 15030,
    CLUSTER_NEIGH_INQ = 15040,
    CLUSTER_NEIGH_RESP = 15050,
    CLUSTER_REJOIN = 15060,
    CLUSTER_HELO = 15070,
    CLUSTER_ELECTION = 15080
};

/**
 * Class generated from <tt>GameForm/GameFormPkt.msg</tt> by opp_msgc.
 * <pre>
 * packet GameFormPkt extends ClusterPkt {
 * 	int msgtype enum(ClusterGameFormMessageTypes);
 * 	int headId;
 * 	int originId;
 * 	double w;
 * 	string listeningNodes;
 * 	
 * };
 * </pre>
 */
class GameFormPkt : public ::ClusterPkt
{
  protected:
    int msgtype_var;
    int headId_var;
    int originId_var;
    double w_var;
    opp_string listeningNodes_var;

  private:
    void copy(const GameFormPkt& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const GameFormPkt&);

  public:
    GameFormPkt(const char *name=NULL, int kind=0);
    GameFormPkt(const GameFormPkt& other);
    virtual ~GameFormPkt();
    GameFormPkt& operator=(const GameFormPkt& other);
    virtual GameFormPkt *dup() const {return new GameFormPkt(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getMsgtype() const;
    virtual void setMsgtype(int msgtype);
    virtual int getHeadId() const;
    virtual void setHeadId(int headId);
    virtual int getOriginId() const;
    virtual void setOriginId(int originId);
    virtual double getW() const;
    virtual void setW(double w);
    virtual const char * getListeningNodes() const;
    virtual void setListeningNodes(const char * listeningNodes);
};

inline void doPacking(cCommBuffer *b, GameFormPkt& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, GameFormPkt& obj) {obj.parsimUnpack(b);}


#endif // _GAMEFORMPKT_M_H_
